// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=La, b=Lb, c=Lc, d=Ld, e=Le, f=Lf, g=Lg, h=Lh);

    RAM512(in=in, load=La, address=address[0..8], out=Ra);
    RAM512(in=in, load=Lb, address=address[0..8], out=Rb);
    RAM512(in=in, load=Lc, address=address[0..8], out=Rc);
    RAM512(in=in, load=Ld, address=address[0..8], out=Rd);

    RAM512(in=in, load=Le, address=address[0..8], out=Re);
    RAM512(in=in, load=Lf, address=address[0..8], out=Rf);
    RAM512(in=in, load=Lg, address=address[0..8], out=Rg);
    RAM512(in=in, load=Lh, address=address[0..8], out=Rh);

    Mux8Way16(a=Ra, b=Rb, c=Rc, d=Rd, e=Re, f=Rf, g=Rg, h=Rh, sel=address[9..11], out=out);
}